name: Deploy database

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest # The type of runner that the job will run on

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Write DMZ SSH Key on the runner
        run: echo "${{ secrets.DMZ_SSH_KEY }}" > DMZ_KEY.pem && chmod 400 DMZ_KEY.pem
        
      - name: Start DMZ tunnel
        run: sudo ssh -tt -o StrictHostKeyChecking=no -L 23:${{ secrets.INSTANCE_IP_ADDRESS }}:22 ${{ secrets.DMZ_USERNAME }}@${{ secrets.DMZ_IP_ADDRESS }} -i DMZ_KEY.pem &
        
      #- name: Upload SQL Script # To action container
      #  uses: actions/upload-artifact@v2
      #  with:
      #    #Set artifact name
      #    name: release
          #From this path
      #    path: target/script.sql
        
      # Write instance SSH Key
      - name: Write Instance SSH Key
        run: echo "${{ secrets.INSTANCE_SSH_KEY }}" > INSTANCE_KEY.pem && chmod 400 INSTANCE_KEY.pem
        
      - name: Upload the SQL script
        uses: appleboy/scp-action@master
        with:
           host: localhost
           username: admin
           key: ${{ secrets.INSTANCE_SSH_KEY }}
           port: 23
           source: "script.sql"
           target: "/home/admin/mysql"
          
      # - name: Upload the SQL script
      #  run: sudo scp -P 23 -i "INSTANCE_KEY.pem" script.sql admin@localhost:/home/admin/mysql
        
      # Connect to Amazon instance
      #- name: Run script on Amazon instance
      #  run: ssh admin@localhost -p 23 -i "INSTANCE_KEY.pem" 'mysql < /home/admin/mysql/script.sql'

